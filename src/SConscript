# author: Philippe Proulx <eepp.ca>


import os.path


Import('root_env')

target = 'delorean'

main_sources = [
    'AbstractHistory.cpp',
    'AbstractMemoryHistory.cpp',
    'AbstractNode.cpp',
    'AbstractThreadedHistory.cpp',
    'CoreNode.cpp',
    'HistoryConfig.cpp',
    'History.cpp',
    'InHistory.cpp',
    'IntervalCreator.cpp',
    'LeafNode.cpp',
    'MemoryHistory.cpp',
    'MemoryInHistory.cpp',
    'MemoryOutHistory.cpp',
    'OutHistory.cpp',
    'ThreadedHistory.cpp',
    'ThreadedInHistory.cpp',
    'ThreadedOutHistory.cpp',
]

ex_base = 'ex'
ex_sources = [
    'ExistingIntervalTypeEx.cpp',
    'InvalidFormatEx.cpp',
    'IOEx.cpp',
    'NodeFullEx.cpp',
    'TimeRangeEx.cpp',
    'UnknownIntervalTypeEx.cpp',
    'UnknownNodeTypeEx.cpp',
]

intervals_base = 'intervals'
intervals_sources = [
    'AbstractInterval.cpp',
    'FloatInterval.cpp',
    'FloatIntervalFactory.cpp',
    'IntInterval.cpp',
    'IntIntervalFactory.cpp',
    'NullInterval.cpp',
    'NullIntervalFactory.cpp',
    'StringInterval.cpp',
    'StringIntervalFactory.cpp',
    'UIntInterval.cpp',
    'UIntIntervalFactory.cpp',
]

sources = []
sources += main_sources
sources += [os.path.join(ex_base, f) for f in ex_sources]
sources += [os.path.join(intervals_base, f) for f in intervals_sources]

root_env.SharedLibrary(target=target, source=sources)
root_env.Library(target=target, source=sources)
