# author: Philippe Proulx <eepp.ca>


import os.path


Import('root_env')

target = 'testall'
libs = [
    'cppunit',
    'delorean',
    'boost_system',
    'boost_filesystem',
]

interval_tests = [
    'Int32IntervalTest.cpp',
    'Int64IntervalTest.cpp',
    'StringIntervalTest.cpp',
]
node_tests = [
    'NodeTest.cpp',
    'AlignedNodeSerDesTest.cpp',
    'DirectMappedNodeCacheTest.cpp',
    'LRUNodeCacheTest.cpp',
]
history_tests = [
    'HistoryFileTest.cpp',
]

subs = [
    ('interval', interval_tests),
    ('node', node_tests),
    ('.', history_tests),
]

sources = [
    'main.cpp',
    os.path.join('..', 'utils.cpp'),
]

for base, files in subs:
    sources += [os.path.join('tests', base, f) for f in files]

env = root_env.Clone()
env.Append(CPPPATH='#/tests')
testall = env.Program(target=target, source=sources, LIBS=libs,
                      LIBPATH='#/src')

Return('testall')
